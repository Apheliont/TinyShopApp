@inject IStringLocalizer<App> Localizer
@inject NavigationManager NavigationManager
@inject IUriUtils UriUtils
@implements IDisposable

<div class="ui small breadcrumb breadcrumb__container">
    <a class="section" href="/">@Localizer["Home"]</a>
    @if (breadcrumbs is not null)
    {
        @foreach (BreadcrumbItemModel breadcrumb in breadcrumbs)
        {
            <i class="right chevron icon divider"></i>
            if (!String.IsNullOrEmpty(breadcrumb.Uri))
            {
                <a class="section" href="@breadcrumb.Uri">@breadcrumb.ItemName</a>
            }
            else
            {
                <div class="active section">@breadcrumb.ItemName</div>
            }
        }
    }

</div>

@code {
    private List<BreadcrumbItemModel> breadcrumbs;

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += HandleLocationChanged;
        // We need get breadcrumbs twice. On every initialization and every time url change
        GetBreadcrumbs();
    }

    private void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        GetBreadcrumbs();
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }

    private void GetBreadcrumbs()
    {
        string uri = NavigationManager.Uri;
        breadcrumbs = UriUtils.GetBreadcrumbs(uri);
    }
}
