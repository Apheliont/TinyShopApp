@using TinyShop.Shared.Layouts
@using TinyShop.Helpers
@layout MainLayout
@page "/categories/{CategoryId:int}"
@inject ICategorySqlDataService categoryDataService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<App> Localizer
@inject ILocalStorage LocalStorage

@if (categories is not null)
{
    <div class="ui grid">
        @foreach (CategoryModel category in categories)
        {
            <div class="four wide column">
                <div class="ui fluid raised link card category__card" @onclick="async () => await CategoryClickHandler(category)">

                    <div class="image category__card-image-container">
                        @if (category.Image is not null)
                        {
                            var categoryImageUrl = category.Image.UriSizeS is not null ? category.Image.UriSizeS : category.Image.UriSizeM;
                            <img src="@categoryImageUrl" alt="@category.Image.Caption" loading="lazy">
                        }
                        else
                        {
                            <img src="img/products/product-no-photo-placeholder.jpg" alt="@Localizer["No picture available"]" loading="lazy">
                        }
                    </div>
                    <div class="content">
                        <div class="header">@category.CategoryName</div>
                        <div class="description">
                            @category.Description
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public int CategoryId { get; set; }

    private List<CategoryModel> categories;

    protected override async Task OnParametersSetAsync()
    {
        categories = await categoryDataService.GetSubcategories(CategoryId);
    }

    private async Task CategoryClickHandler(CategoryModel category)
    {
        var url = $"/categories/{category.Id.ToString()}";
        if (!category.IsParent)
        {
            string parameters = await LocalStorage.ReadSortingParameters();
            if (parameters.Length > 0)
            {
                url += $"/products?{parameters}";
            }
            else
            {
                url += "/products";
            }
        }

        NavigationManager.NavigateTo(url, false);
    }
}
