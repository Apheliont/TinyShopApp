@inject IStringLocalizer<App> Localizer
@inject IJSRuntime JSRuntime

@if (Products is not null)
{
    <div class="product-list__container">
        @foreach (ProductModel product in Products)
        {
            var carouselId = $"carousel-{product.Id}";
            <div id="@carouselId" class="product__carousel-container">
                <button @onclick="() => CloseButtonHandler(carouselId)"
                        class="circular ui icon basic button product__carousel-close-btn">
                    <i class="big times circle outline icon"></i>
                </button>
            </div>
            <div class="product__list-item">
                <div class="product__image-container">
                    <img @onclick="() => ImageClickhandler(carouselId)"
                         src="https://c.dns-shop.ru/thumb/st1/fit/320/250/f6b172885b875667704cd5e81ddf1ae2/ee726604f2aba57d1902e154e3b11d59d300834ba9f3d0aa113c21dc161e112c.jpg" alt="...">
                </div>
                <div class="product__content-container">
                    <a class="product-content__header">@product.ProductName</a>
                    <p class="product-content__description">
                        @product.Description
                    </p>
                </div>
                <div class="product-buy__container">
                    <div class="product-buy__price">
                        @product.Price
                    </div>
                    <div class="product-buy__to-cart">
                        <button class="product-buy__to-cart-btn" @onclick="async () => { await AddToCartHandler(product.Id); }">@Localizer["Add to cart"]</button>
                    </div>
                </div>
            </div>
        }

    </div>
}

@code {
    [Parameter]
    public EventCallback<int> OnAddToCart { get; set; }

    [Parameter]
    public List<ProductModel> Products { get; set; }

    private IJSObjectReference module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/scripts.js");
        }
    }

    private async Task AddToCartHandler(int productId)
    {
        await OnAddToCart.InvokeAsync(productId);
    }

    private async Task ImageClickhandler(string carouselId)
    {
        await module.InvokeVoidAsync("hideAllElements");
        await module.InvokeVoidAsync("showElement", carouselId);
    }
    
    private async Task CloseButtonHandler(string carouselId)
    {
        await module.InvokeVoidAsync("hideElement", carouselId);
    }
}
